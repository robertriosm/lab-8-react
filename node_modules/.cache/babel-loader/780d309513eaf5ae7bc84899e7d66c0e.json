{"ast":null,"code":"import React from 'react';\nimport '../index.css';\nimport PropTypes from 'prop-types';\nimport cardback from '../../public/img/cardback.png';\n/**\r\n * componente carta\r\n * @param {*} param0 imagen, funcion para el match,\r\n * si esta volteada y si ya no puede voltearse de nuevo\r\n * @returns una carta que se guarda en el array cards\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Card(_ref) {\n  var card = _ref.card,\n      handleChoice = _ref.handleChoice,\n      flipped = _ref.flipped,\n      disabled = _ref.disabled;\n\n  /**\r\n   * funcion para detectar si una carta puede voltearse o no\r\n   */\n  var cardClick = function cardClick() {\n    if (!disabled) {\n      handleChoice(card);\n    }\n\n    handleChoice(card);\n  };\n  /**\r\n   * el componente visualmente\r\n   */\n\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: flipped ? 'flipped' : '',\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        type: \"image\",\n        className: \"front\",\n        src: card.src,\n        alt: \"card front\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"image\",\n        onClick: cardClick,\n        className: \"back\",\n        src: cardback,\n        alt: \"card back\"\n      })]\n    })\n  });\n}\nCard.propTypes = {\n  card: PropTypes.shape({\n    src: PropTypes.object,\n    matched: PropTypes.bool\n  }),\n  handleChoice: PropTypes.func.isRequired,\n  flipped: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}